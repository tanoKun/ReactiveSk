# テスト用クラス
class ClassDeclareLocalVariableTestDynamic[var value: String]:
    function testMethod() :: String:
        return "Hello, World!"

# 推論あり (定義と代入)
on load:
    # immutable / mutable 両方
    immutable inferredImmutable := new ClassDeclareLocalVariableTestDynamic("default")
    mutable inferredMutable := new ClassDeclareLocalVariableTestDynamic("default")

    send [inferredImmutable] -> testMethod() to console
    send [inferredMutable] -> testMethod() to console

    set [inferredMutable] to new ClassDeclareLocalVariableTestDynamic("changed")
    send [inferredMutable] -> testMethod() to console

    set [inferredImmutable] to new ClassDeclareLocalVariableTestDynamic("changed") # immutable なのでエラーになるはず

# 推論なし (型明示 + 定義と代入)
on load:
    # dynamic 型を明示
    immutable explicitImmutable (ClassDeclareLocalVariableTestDynamic) := new ClassDeclareLocalVariableTestDynamic("default")
    mutable explicitMutable (ClassDeclareLocalVariableTestDynamic) := new ClassDeclareLocalVariableTestDynamic("default")

    send [explicitImmutable] -> testMethod() to console
    send [explicitMutable] -> testMethod() to console

    set [explicitMutable] to new ClassDeclareLocalVariableTestDynamic("changed")
    send [explicitMutable] -> testMethod() to console

    set [explicitImmutable] to new ClassDeclareLocalVariableTestDynamic("changed") # immutable なのでエラーになるはず

# 推論なし (型明示・定義のみ -> 後で代入想定)
on load:
    immutable declaredImmutable (ClassDeclareLocalVariableTestDynamic)
    mutable declaredMutable (ClassDeclareLocalVariableTestDynamic)
